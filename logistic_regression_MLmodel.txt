import pandas as pd
import psycopg2 as pg

from google.colab import files 
uploaded = files.upload()

import io
df = pd.read_csv(io.BytesIO(uploaded['ml_BattingFielding.csv']))
df.head()
# Dataset is now stored in a Pandas Dataframe


from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df2 = HallofFame_df.copy()
df2['inducted'] = le.fit_transform(df2['inducted'])

df2['playerID'] = le.fit_transform(df2['playerID'])

from sklearn.preprocessing import StandardScaler
data_scaler = StandardScaler()

df2_data_scaled = data_scaler.fit_transform(df2)

#verify that the mean of each column is 0 and its standard deviation is 1:
import numpy as np
print(np.mean(df2_data_scaled[:,0]))
print(np.std(df2_data_scaled[:,0]))

y = df2["inducted"]
X = df2.drop(columns="inducted")



from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, 
                                                    y, 
                                                    random_state=1, 
                                                    stratify=y)
X_train.shape

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(solver='lbfgs',
   max_iter=2000,
   random_state=1)

classifier.fit(X_train, y_train)

LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=200,
                   multi_class='warn', n_jobs=None, penalty='l2',
                   random_state=1, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
                   
 y_pred = classifier.predict(X_test)
results = pd.DataFrame({"Prediction": y_pred, "Actual": y_test}).reset_index(drop=True)
results.head(20)

from sklearn.metrics import accuracy_score
print(accuracy_score(y_test, y_pred)) 
